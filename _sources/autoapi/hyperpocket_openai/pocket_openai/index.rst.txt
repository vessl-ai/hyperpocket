hyperpocket_openai.pocket_openai
================================

.. py:module:: hyperpocket_openai.pocket_openai



Classes
-------

.. autoapisummary::

   hyperpocket_openai.pocket_openai.PocketOpenAI


Functions
---------

.. autoapisummary::

   hyperpocket_openai.pocket_openai.handle_tool_call_async
   hyperpocket_openai.pocket_openai.handle_tool_call


Module Contents
---------------

.. py:class:: PocketOpenAI

   Bases: :py:obj:`hyperpocket.Pocket`


   .. py:method:: init_auth_async(thread_id='default', profile='default') -> None
      :async:



   .. py:method:: invoke(tool_call: openai.types.chat.ChatCompletionMessageToolCall, thread_id=None, profile=None, **kwargs)


   .. py:method:: ainvoke(tool_call: openai.types.chat.ChatCompletionMessageToolCall, thread_id=None, profile=None, **kwargs)
      :async:



   .. py:method:: get_open_ai_tool_specs(use_profile: Optional[bool] = None) -> List[dict]


   .. py:method:: get_open_ai_tool_spec(tool: hyperpocket.tool.Tool) -> dict


   .. py:method:: create_run_function(spec: dict) -> Callable


   .. py:method:: get_openai_agents_tools() -> List[agents.FunctionTool]

      wrapper for schema change



.. py:function:: handle_tool_call_async(llm: openai.OpenAI, pocket: PocketOpenAI, model: str, tool_specs: List[dict], messages: List[dict])
   :async:


.. py:function:: handle_tool_call(llm: openai.OpenAI, pocket: PocketOpenAI, model: str, tool_specs: List[dict], messages: List[dict])

